# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn  clean install  -DskipTests
      - name: Build the Docker image
        run: cp -r cloudeon-assembly/target/cloudeon-assembly-*-release ./docker

      - name: build docker image for aliyun
        run:  docker login --username=${{ secrets.ALIYUN_DOCKER_USERNAME }} --password  ${{ secrets.ALIYUN_DOCKER_PASSWORD }} registry.cn-hangzhou.aliyuncs.com  && docker build -f docker/Dockerfile  --build-arg CLOUDEON_VERSION=dev -t cloudeon:dev ./docker  && docker tag cloudeon:dev registry.cn-hangzhou.aliyuncs.com/udh/cloudeon:dev  && docker push registry.cn-hangzhou.aliyuncs.com/udh/cloudeon:dev

